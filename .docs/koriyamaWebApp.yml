openapi: 3.0.3
info:
  title: koriyamaWebAppV1
  version: 1.0.0
  contact: {}
servers:
  - url: 'http://localhost:5000'
paths:
  /api/v1/blogs:
    get:
      tags:
        - user
      summary: ブログ一覧の取得
      description: ブログを全件取得する。
      operationId: get_blogs
      responses:
        '200':
          description: ''
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blogs'
      security:
        - {}
  /api/v1/blogs/{blogId}:
    get:
      tags:
        - user
      summary: ブログの取得
      description: ブログIDで指定されたブログを取得する。
      operationId: get_blogs_by_id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
      security:
        - {}
    parameters:
      - name: blogId
        in: path
        required: true
        schema:
          type: integer
  /api/v1/stampboard:
    post:
      tags:
        - user
      summary: スタンプボードの取得
      description: スタンプボードのブログ記事を取得する
      operationId: get_stampboard
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                exclude_ids:
                  type: array
                  items:
                    type: integer
            examples:
              exclude_ids:
                value:
                  {"exclude_ids": [1, 2, 3]}
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stampboard'
      security:
        - {}
  /api/v1/admin/blogs:
    post:
      tags:
        - admin
      summary: ブログの作成
      description: ブログを作成する
      operationId: post_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog'
      security:
        - basicAuth: []
  /api/v1/admin/blogs/{blogId}:
    put:
      tags:
        - admin
      summary: ブログの編集
      description: ブログの編集を行う
      operationId: put_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Blog'
      security:
        - basicAuth: []
    delete:
      tags:
        - admin
      summary: ブログの削除
      description: ブログの削除を行う
      operationId: delete_blog
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                type: object
      security:
        - basicAuth: []
    parameters:
      - name: blogId
        in: path
        required: true
        schema:
          type: integer
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Blog:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nick_name:
          type: string
          example: "スタンプボード上に表示される名称"
        place_name:
          type: string
          example: "ブログタイトル"
        points:
          type: string
          example: "おすすめポイント"
        more_description:
          type: string
          example: "もっと詳しく"
        address:
          type: string
          example: "住所"
        images:
          type: array
          items:
            type: string
          example: ["/img/a.jpg", "/img/b.jpg"]
    Blogs:
      type: object
      properties:
        blogs:
          type: array
          items:
            $ref: '#/components/schemas/Blog'
    StampboardItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nick_name:
          type: string
          example: "スタンプ上の名称"
    Stampboard:
      type: object
      properties:
        stampboard:
          type: array
          items:
            $ref: '#/components/schemas/StampboardItem'
tags:
  - name: user
  - name: admin
